<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.changji.cloud.social.mapper.FriendCircleMessageMapper">


    <sql id="all_columns">
        id, user_id, content, picture, location, liked_count, is_delete, create_time
    </sql>
    <insert id="save">
        insert into friend_circle_message (user_id, content, picture) values
        (#{friendCircleMessage.userId}, #{friendCircleMessage.content}, #{friendCircleMessage.picture})
    </insert>

    <update id="updateFriendCircleMessage">
        update friend_circle_message set liked_count = #{friendCircleMessage.likedCount}
        WHERE id = #{friendCircleMessage.id}
    </update>

    <update id="deleteByFriendCircleIdAndUserId">
        update friend_circle_message set is_delete = 0
        where id = #{friendCircleId} and user_id = #{userId}
    </update>


    <select id="getFriendCircle" resultType="com.changji.cloud.social.model.FriendCircleMessage">
        select <include refid="all_columns"></include> from friend_circle_message
        <where>
            <if test="userId != null and userId != ''">
                user_id = #{userId} and
            </if>
            is_delete = 1
        </where> order by id desc
    </select>

    <select id="getFriendCircleMessageById" resultType="com.changji.cloud.social.model.FriendCircleMessage">
        select <include refid="all_columns"></include> from friend_circle_message
        where id = #{id} and is_delete = 1
    </select>
    <select id="getMoments" resultType="com.changji.cloud.social.model.FriendCircleMessage">
        select * from  friend_circle_message  order by create_time desc LIMIT #{page.pageSize} OFFSET #{page.pageNum}
    </select>


</mapper>
